#!/usr/bin/env python2.7
from subprocess import Popen, PIPE
import sys, re, os
import textwrap
class cl:
    D = '\033[0m' #default color
    R = '\033[91m' #light red
    G = '\033[92m' #light green
    Y = '\033[93m' #light yellow
    B = '\033[94m' #light blue

#colorizes the substring in string with color color
#the search is case-insensitive
def colorize(string,sub,color):
    index = string.lower().find(sub.lower())
    if index>0:
        #insert defined color string
        string = string[:index] + color + string[index:]
        #insert default color string
        length=len(sub)+len(color)
        string = string[:index+length] + cl.D + string[index+length:]
    return string

try:
    rows, columns = os.popen('stty size', 'r').read().split()
    args = sys.argv
    args[0]='pacaur'
    pkgnames=[]
    if len(args)>2 and args[1]=="-Ss":
        #wrap around pacaur

        p = Popen(args,stdin=PIPE, stdout=PIPE, bufsize=1)
        lnctr = 0
        num = 0
        for line in p.stdout:
            line = line.lstrip()
            origline=line #backup line
            #colorize search term, case insensitive
            line = colorize(line,args[2],cl.Y)
            #colorize out-of-date flag
            line = colorize(line,'<!>',cl.D)
            #colorize '[installed]' flag
            line = colorize(line,'[installed]',cl.G)
            if lnctr % 2 == 0: #this is the package line
                #fetch package name
                pkgnames.append(origline.split(' ')[0])
                print cl.B+"["+str(num)+"]"+cl.D,
                print line,
                num=num+1
            else: # this is the description
                indent = len(str(num))+3
                for ln in textwrap.wrap(line, int(columns)-indent):
                    #print each wrapped line, with dynamic whitespaces
                    print ' '*indent + ln
            lnctr=lnctr+1

        if lnctr == 0:
            #no packages found
            exit(1)

        selection=raw_input(":: Packagenumber? [0] ")
        if len(selection)==0:
            selection=0
        else:
            selection=int(selection)
        while selection < 0 or selection >= num:
            selection=int(raw_input(":: Range is 0 to "+str(num-1)+"  "))

        inargs=raw_input(":: pacaur args [-S]: ")
        if len(inargs)==0:
            inargs='-S'
        pkgname = pkgnames[int(selection)]
        newargs=['pacaur',inargs, pkgname]
        p = Popen(newargs,bufsize=1)
        p.wait()

    else:
        #simply pass arguments to pacaur:
        p = Popen(args,bufsize=1)
        p.wait()
except KeyboardInterrupt:
    print "\nuser abort"
    exit(0)
